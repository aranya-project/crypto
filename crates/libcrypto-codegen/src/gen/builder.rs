use proc_macro2::{Ident, TokenStream};
use quote::{format_ident, quote};

pub use crate::error::BuildError;

/// TODO
#[derive(Clone, Debug)]
pub struct Builder {
    pub(super) libcrypto: Ident,
}

impl Builder {
    /// TODO
    pub fn new() -> Self {
        Self {
            libcrypto: format_ident!("__spideroak_libcrypto"),
        }
    }

    /// TODO
    pub fn generate(self) -> Result<TokenStream, BuildError> {
        let libcrypto = &self.libcrypto;

        let aead = self.aeads();

        let code = quote! {
            // This code is @generated by
            // `spideroak-libcrypto-codegen`. DO NOT EDIT.

            extern crate spideroak_libcrypto as #libcrypto;

            mod aead {
                use super::*;

                #aead
            }
            pub use aead::*;
        };
        Ok(code)
    }
}
